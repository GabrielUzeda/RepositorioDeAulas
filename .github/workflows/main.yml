name: Deploy para GCP via gcloud

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: Deploy
    env:
      ACTIONS_STEP_DEBUG: true

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Criar secret.json
        run: |
          cat <<EOF > secret.json
          {
            "email": {
              "service_id": "${{ secrets.SERVICE_ID }}",
              "template_id": "${{ secrets.TEMPLATE_ID }}",
              "public_key": "${{ secrets.PUBLIC_KEY }}",
              "to_email": "uzeda.dev@gmail.com"
            },
            "turmas": {
              "estatistica": { "senha": "${{ secrets.SENHA_EST }}" },
              "terceirao": { "senha": "${{ secrets.SENHA_TERCEIRAO }}" },
              "logica": { "senha": "${{ secrets.SENHA_LOGICA }}" }
            }
          }
          EOF

      - name: Listar arquivos no diret처rio
        run: ls -la ./

      - name: Instalar Node.js, Marp CLI e Mermaid CLI
        run: |
          echo "Instalando Node.js, Marp CLI e Mermaid CLI..."
          sudo apt-get update -y
          sudo apt-get install -y nodejs npm 
          sudo npm install -g @marp-team/marp-cli @marp-team/marpit markdown-it-mermaid markdown-it-mathjax3 markdown-it-attrs markdown-it-container markdown-it-deflist markdown-it-footnote

      - name: Converter Markdown para slides HTML com Marp
        run: |
          echo "Convertendo todos os arquivos .md recursivamente em HTML (no mesmo diret처rio)..."
          export NODE_PATH=$(npm root -g)
          find ./turmas -type f -name "*.md" -print0 | xargs -0 -n1 -I{} sh -c '
            mdfile="{}"
            out="${mdfile%.md}.html"
            echo "Convertendo $mdfile -> $out"
            marp "$mdfile" --engine ./engine.js -o "$out"
          '
        shell: bash


      - name: Autenticar no GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: Configurar gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Testar conex찾o com a VM
        run: |
          gcloud compute ssh ${{ secrets.GCP_INSTANCE_NAME }} \
            --zone=${{ secrets.GCP_ZONE }} \
            --project=${{ secrets.GCP_PROJECT_ID }} \
            --command="echo Conex찾o bem-sucedida"
            
      - name: Copiar arquivos para a VM (para /tmp)
        run: |
          gcloud compute scp --recurse ./* \
            ${{ secrets.GCP_INSTANCE_NAME }}:/tmp/deploy \
            --zone=${{ secrets.GCP_ZONE }} \
            --project=${{ secrets.GCP_PROJECT_ID }}

      - name: Mover arquivos para /var/www/html/efg
        run: |
          gcloud compute ssh ${{ secrets.GCP_INSTANCE_NAME }} \
            --zone=${{ secrets.GCP_ZONE }} \
            --project=${{ secrets.GCP_PROJECT_ID }} \
            --command="sudo cp -r /tmp/deploy/* /var/www/html/efg/"
